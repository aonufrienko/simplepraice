<?php

namespace SimlepriceBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Provider
 *
 * @ORM\Table(name="provider")
 * @ORM\Entity(repositoryClass="SimlepriceBundle\Repository\ProviderRepository")
 */
class Provider
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="provider_name", type="string", length=255)
     */
    private $providerName;

	/**
     * @ORM\OneToMany(targetEntity="Developer", mappedBy="provider")
     */
    protected $developers;


    /**
     * @ORM\OneToMany(targetEntity="MatchingProduct", mappedBy="provider")
     */
    protected $matchingProducts;


    /**
     * @ORM\OneToMany(targetEntity="Category", mappedBy="provider")
     */
    protected $categorys;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="modified_at", type="datetime")
     */
    private $modifiedAt;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->developers = new \Doctrine\Common\Collections\ArrayCollection();
        $this->matchingProducts = new \Doctrine\Common\Collections\ArrayCollection();
        $this->categorys = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set providerName
     *
     * @param string $providerName
     *
     * @return Provider
     */
    public function setProviderName($providerName)
    {
        $this->providerName = $providerName;

        return $this;
    }

    /**
     * Get providerName
     *
     * @return string
     */
    public function getProviderName()
    {
        return $this->providerName;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return Provider
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set modifiedAt
     *
     * @param \DateTime $modifiedAt
     *
     * @return Provider
     */
    public function setModifiedAt($modifiedAt)
    {
        $this->modifiedAt = $modifiedAt;

        return $this;
    }

    /**
     * Get modifiedAt
     *
     * @return \DateTime
     */
    public function getModifiedAt()
    {
        return $this->modifiedAt;
    }

    /**
     * Add developer
     *
     * @param \SimlepriceBundle\Entity\Developer $developer
     *
     * @return Provider
     */
    public function addDeveloper(\SimlepriceBundle\Entity\Developer $developer)
    {
        $this->developers[] = $developer;

        return $this;
    }

    /**
     * Remove developer
     *
     * @param \SimlepriceBundle\Entity\Developer $developer
     */
    public function removeDeveloper(\SimlepriceBundle\Entity\Developer $developer)
    {
        $this->developers->removeElement($developer);
    }

    /**
     * Get developers
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getDevelopers()
    {
        return $this->developers;
    }

    /**
     * Add matchingProduct
     *
     * @param \SimlepriceBundle\Entity\MatchingProduct $matchingProduct
     *
     * @return Provider
     */
    public function addMatchingProduct(\SimlepriceBundle\Entity\MatchingProduct $matchingProduct)
    {
        $this->matchingProducts[] = $matchingProduct;

        return $this;
    }

    /**
     * Remove matchingProduct
     *
     * @param \SimlepriceBundle\Entity\MatchingProduct $matchingProduct
     */
    public function removeMatchingProduct(\SimlepriceBundle\Entity\MatchingProduct $matchingProduct)
    {
        $this->matchingProducts->removeElement($matchingProduct);
    }

    /**
     * Get matchingProducts
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getMatchingProducts()
    {
        return $this->matchingProducts;
    }

    /**
     * Add category
     *
     * @param \SimlepriceBundle\Entity\Category $category
     *
     * @return Provider
     */
    public function addCategory(\SimlepriceBundle\Entity\Category $category)
    {
        $this->categorys[] = $category;

        return $this;
    }

    /**
     * Remove category
     *
     * @param \SimlepriceBundle\Entity\Category $category
     */
    public function removeCategory(\SimlepriceBundle\Entity\Category $category)
    {
        $this->categorys->removeElement($category);
    }

    /**
     * Get categorys
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCategorys()
    {
        return $this->categorys;
    }
}
