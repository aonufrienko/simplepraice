<?php

namespace SimlepriceBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Category
 *
 * @ORM\Table(name="category")
 * @ORM\Entity(repositoryClass="SimlepriceBundle\Repository\CategoryRepository")
 */
class Category
{
    
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="category_provider_name", type="string", length=255)
     */
    private $categoryProviderName;

    /**
     * @var string
     *
     * @ORM\Column(name="category_company_name", type="string", length=255)
     */
    private $categoryCompanyName;

    /**
     * @var int
     * @ORM\ManyToOne(targetEntity="provider", inversedBy="category")
     * @ORM\JoinColumn(name="provider_id", referencedColumnName="id", onDelete="CASCADE")
     */
    private $provider;

	/**
     * @ORM\OneToMany(targetEntity="ProductСompany", mappedBy="productCategory")
     */
    protected $productCompanys;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="modified_at", type="datetime")
     */
    private $modifiedAt;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->productCompanys = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set categoryProviderName
     *
     * @param string $categoryProviderName
     *
     * @return Category
     */
    public function setCategoryProviderName($categoryProviderName)
    {
        $this->categoryProviderName = $categoryProviderName;

        return $this;
    }

    /**
     * Get categoryProviderName
     *
     * @return string
     */
    public function getCategoryProviderName()
    {
        return $this->categoryProviderName;
    }

    /**
     * Set categoryCompanyName
     *
     * @param string $categoryCompanyName
     *
     * @return Category
     */
    public function setCategoryCompanyName($categoryCompanyName)
    {
        $this->categoryCompanyName = $categoryCompanyName;

        return $this;
    }

    /**
     * Get categoryCompanyName
     *
     * @return string
     */
    public function getCategoryCompanyName()
    {
        return $this->categoryCompanyName;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     *
     * @return Category
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set modifiedAt
     *
     * @param \DateTime $modifiedAt
     *
     * @return Category
     */
    public function setModifiedAt($modifiedAt)
    {
        $this->modifiedAt = $modifiedAt;

        return $this;
    }

    /**
     * Get modifiedAt
     *
     * @return \DateTime
     */
    public function getModifiedAt()
    {
        return $this->modifiedAt;
    }

    /**
     * Set provider
     *
     * @param \SimlepriceBundle\Entity\provider $provider
     *
     * @return Category
     */
    public function setProvider(\SimlepriceBundle\Entity\provider $provider = null)
    {
        $this->provider = $provider;

        return $this;
    }

    /**
     * Get provider
     *
     * @return \SimlepriceBundle\Entity\provider
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * Add productCompany
     *
     * @param \SimlepriceBundle\Entity\ProductСompany $productCompany
     *
     * @return Category
     */
    public function addProductCompany(\SimlepriceBundle\Entity\ProductСompany $productCompany)
    {
        $this->productCompanys[] = $productCompany;

        return $this;
    }

    /**
     * Remove productCompany
     *
     * @param \SimlepriceBundle\Entity\ProductСompany $productCompany
     */
    public function removeProductCompany(\SimlepriceBundle\Entity\ProductСompany $productCompany)
    {
        $this->productCompanys->removeElement($productCompany);
    }

    /**
     * Get productCompanys
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getProductCompanys()
    {
        return $this->productCompanys;
    }
}
